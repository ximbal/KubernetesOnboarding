apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
    app: baz
  name: baz-app
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: baz
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app: baz
    spec:
      containers:
        - image: hashicorp/http-echo:0.2.3      
          imagePullPolicy: Always
          name: baz-app
          args:
          - -text=baz
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities: {}
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
    app: bar
  name: bar-app
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: bar
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app: bar
    spec:
      containers:
        - image: hashicorp/http-echo:0.2.3      
          imagePullPolicy: Always
          name: bar-app
          args:
          - -text=bar
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities: {}
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
    app: foo
  name: foo-app
  namespace: default
spec:
  replicas: 5
  selector:
    matchLabels:
      app: foo
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app: foo
    spec:
      containers:
        - image: hashicorp/http-echo:0.2.3      
          imagePullPolicy: Always
          name: foo-app
          args:
          - -text=foo
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities: {}
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---